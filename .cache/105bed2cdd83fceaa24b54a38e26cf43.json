{"dependencies":[{"name":"react"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Bundle = function (_Component) {\n  _inherits(Bundle, _Component);\n\n  function Bundle(props, context) {\n    _classCallCheck(this, Bundle);\n\n    var _this = _possibleConstructorReturn(this, (Bundle.__proto__ || Object.getPrototypeOf(Bundle)).call(this, props, context));\n\n    _this.state = {\n      mod: null\n    };\n    return _this;\n  }\n\n  _createClass(Bundle, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.load(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.load !== this.props.load) {\n        this.load(nextProps);\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(props) {\n      var _this2 = this;\n\n      this.setState({\n        mod: null\n      });\n      props.load(function (mod) {\n        _this2.setState({\n          // handle both es imports and cjs\n          mod: mod.default ? mod.default : mod\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.state.mod);\n    }\n  }]);\n\n  return Bundle;\n}(_react.Component);\n\nexports.default = Bundle;"},"hash":"1be1b839bd5fceb76e75aee87e4b0dfc"}